/** уи»т║духїт║дсЂ«тЈќтЙЌ */
export const getCurrentPositionPromise = (options) => {
  return new Promise((resolve, reject) => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position: GeolocationPosition) => {
          const location: google.maps.LatLngLiteral = {
            lat: position.coords.latitude,
            lng: position.coords.longitude,
          };
          const msg: string = 'уЈЙтюетю░сЂДсЂЎ ­Ъљб';
          const data: object = { location, msg };
          resolve(data);
        },
        (error) => {
          /** сЃќсЃЕсѓдсѓХсЂ»geolocationт»Йт┐юсЂЌсЂдсЂёсѓІ */
          let errMsg: string = '';
          /** сѓесЃЕсЃ╝Тї»сѓітѕєсЂЉ */
          if (error.code === 1) {
            errMsg = 'сЃџсЃ╝сѓИсЂ«СйЇуй«ТЃЁта▒сѓњУе▒тЈ»сЂЌсЂдсЂЈсЂасЂЋсЂёсђђ­ЪљД';
          }
          if (error.code === 2) {
            errMsg = 'тєЁжЃесѓесЃЕсЃ╝сЂДсЂЎсђђ­ЪдЄ';
          }
          if (error.code === 3) {
            errMsg = 'тѕХжЎљТЎѓжќЊтєЁсЂФСйЇуй«ТЃЁта▒сѓњтЈќтЙЌсЂДсЂЇсЂЙсЂЏсѓЊсЂДсЂЌсЂЪсђђ­ЪЉ╣';
          }
          reject({ browserHasGeolocation: true, errMsg });
        },
        options
      );
    } else {
      /** сЃќсЃЕсѓдсѓХсЂ»geolocationт»Йт┐юсЂЌсЂдсЂфсЂё */
      reject(false);
    }
  });
};
